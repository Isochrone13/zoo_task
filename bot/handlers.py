import os
from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    ReplyKeyboardMarkup
)
from telegram.ext import ContextTypes

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ. –ò—Ö –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç bot.py –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º:
ANIMALS = {}             # —Å–ª–æ–≤–∞—Ä—å –ø—Ä–æ—Ñ–∏–ª–µ–π –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏–∑ animals.json
QUIZ = []                # —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –∏–∑ quiz.json
MEDIA_DIR = ""           # –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏

# –ò–º—è —Ñ–∞–π–ª–∞-–ª–æ–≥–æ—Ç–∏–ø–∞ –∑–æ–æ–ø–∞—Ä–∫–∞, –ª–µ–∂–∏—Ç –≤ MEDIA_DIR
LOGO_FILENAME = "moscow_zoo.png"

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø–æ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ (Reply Keyboard)
MAIN_KEYBOARD = [
    ["üß© –í–∏–∫—Ç–æ—Ä–∏–Ω–∞", "üìù –û—Ç–∑—ã–≤"],
    ["‚úâÔ∏è –°–≤—è–∑—å",   "‚ÑπÔ∏è –ü–æ–º–æ—â—å"],
]

def get_main_kb():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç ReplyKeyboardMarkup,
    —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –Ω–µ –∏—Å—á–µ–∑–∞–ª–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è.
    """
    return ReplyKeyboardMarkup(
        MAIN_KEYBOARD,
        resize_keyboard=True,
        one_time_keyboard=False
    )

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–æ–±—â–µ–Ω–∏–π
async def log_update(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if update.message:
        text = update.message.text or '<non-text>'
        user = update.effective_user
        print(f"MSG from {user.id}: {text}")
    # –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞–∂–∞—Ç–∏–µ inline-–∫–Ω–æ–ø–∫–∏
    elif update.callback_query:
        cq = update.callback_query
        print(f"CBQ from {cq.from_user.id}: {cq.data}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    print(f"Error handling update {update}: {context.error}")

# –û—Å–Ω–æ–≤–Ω—ã–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    /start ‚Äî —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥–æ—Ç–∏–ø –∑–æ–æ–ø–∞—Ä–∫–∞ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å),
    –∑–∞—Ç–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º MAIN_KEYBOARD.
    """
    logo_path = os.path.join(MEDIA_DIR, LOGO_FILENAME)
    if os.path.exists(logo_path):
        with open(logo_path, 'rb') as logo:
            await update.message.reply_photo(photo=logo)

    text = (
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º!\n\n"
        "–í—ã –ø–æ–ø–∞–ª–∏ –≤ –º–µ—Å—Ç–æ, –≥–¥–µ –≤–∞–º –ø–æ–º–æ–≥—É—Ç –≤–∑—è—Ç—å –∂–∏–≤–æ—Ç–Ω–æ–µ –ø–æ–¥ –æ–ø–µ–∫—É!\n\n"
        "–£—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ ¬´–ö–ª—É–± –¥—Ä—É–∑–µ–π –∑–æ–æ–ø–∞—Ä–∫–∞¬ª ‚Äî —ç—Ç–æ –ø–æ–º–æ—â—å –≤ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏ –Ω–∞—à–∏—Ö –æ–±–∏—Ç–∞—Ç–µ–ª–µ–π, "
        "–∞ —Ç–∞–∫–∂–µ –≤–∞—à –ª–∏—á–Ω—ã–π –≤–∫–ª–∞–¥ –≤ –¥–µ–ª–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–∏–æ—Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –ó–µ–º–ª–∏ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞—à–µ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞.\n\n"
        "–ß—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –∂–∏–≤–æ—Ç–Ω—ã–º, –ø—Ä–æ–π–¥–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É ¬´–ö–∞–∫–æ–µ —É –≤–∞—Å —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ?¬ª\n\n"
    )
    await update.message.reply_text(text, reply_markup=get_main_kb())

async def start_quiz(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã:
     - –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
     - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫–∏ scores –∏ –∏–Ω–¥–µ–∫—Å –≤–æ–ø—Ä–æ—Å–∞ q_index
     - –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑ ask_question()
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –∫–∞–∫ –∏–∑ /start (message), —Ç–∞–∫ –∏ –∏–∑ inline-–∫–Ω–æ–ø–∫–∏.
    """
    if update.callback_query:
        cq = update.callback_query
        await cq.answer()           # –æ—Ç–≤–µ—á–∞–µ–º ¬´—Ç–∏—Ö–æ¬ª, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ —Å–Ω—è–ª–∞—Å—å
        update_or_query = cq
    else:
        update_or_query = update

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å—ë –≤ context.user_data
    context.user_data.clear()
    context.user_data['scores'] = {k: 0 for k in ANIMALS}
    context.user_data['q_index'] = 0

    await ask_question(update_or_query, context)

async def ask_question(update_or_query, context: ContextTypes.DEFAULT_TYPE):
    """
    –ë–µ—Ä–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å –ø–æ –∏–Ω–¥–µ–∫—Å—É q_index –∏–∑ context.user_data.
    –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç + inline-–∫–Ω–æ–ø–∫–∏ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏,
    –∏–Ω–∞—á–µ ‚Äî –≤—ã–∑—ã–≤–∞–µ—Ç show_result().
    """
    q_idx = context.user_data.get('q_index', 0)
    if q_idx < len(QUIZ):
        q = QUIZ[q_idx]
        buttons = [
            [InlineKeyboardButton(ans['text'], callback_data=f"ans|{i}")]
            for i, ans in enumerate(q['answers'])
        ]
        # –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ update
        sender = (
            update_or_query.message.reply_text
            if hasattr(update_or_query, 'message')
            else update_or_query.edit_message_text
        )
        await sender(q['question'], reply_markup=InlineKeyboardMarkup(buttons))
    else:
        await show_result(update_or_query, context)

async def answer_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ (callback_data –≤–∏–¥–∞ "ans|<idx>"):
     - –†–∞–∑–±–∏—Ä–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –æ—Ç–≤–µ—Ç–∞
     - –î–æ–±–∞–≤–ª—è–µ—Ç –≤–µ—Å–∞ –∫ —Å—á–µ—Ç—á–∏–∫–∞–º –≤ context.user_data['scores']
     - –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç q_index –∏ –≤—ã–∑—ã–≤–∞–µ—Ç ask_question() –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ
    """
    cq = update.callback_query
    await cq.answer()

    _, idx_str = cq.data.split('|')
    idx = int(idx_str)
    q_idx = context.user_data.get('q_index', 0)

    # –ü—Ä–∏–±–∞–≤–ª—è–µ–º –≤–µ—Å–∞
    for key in QUIZ[q_idx]['answers'][idx].get('weights', []):
        if key in context.user_data['scores']:
            context.user_data['scores'][key] += 1

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
    context.user_data['q_index'] = q_idx + 1
    await ask_question(cq, context)

async def show_result(update_or_query, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã:
     - –ù–∞—Ö–æ–¥–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ –≤ scores ‚Üí –ø–æ–±–µ–¥–∏—Ç–µ–ª—å
     - –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ ANIMALS[winner]
     - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É + –ø–æ–¥–ø–∏—Å—å (caption)
     - –í—ã–≤–æ–¥–∏—Ç –¥–≤–µ inline-–∫–Ω–æ–ø–∫–∏: ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è¬ª –∏ ¬´–°–Ω–∞—á–∞–ª–∞¬ª
    """
    scores = context.user_data.get('scores', {})
    if not scores:
        return

    winner = max(scores, key=scores.get)
    info = ANIMALS.get(winner, {})

    # –°–æ–±–∏—Ä–∞–µ–º –ø—É—Ç—å –¥–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
    img_rel = info.get('image', '')
    img_path = os.path.join(MEDIA_DIR, os.path.basename(img_rel))

    caption = (
        f"üéâ –í–∞—à–µ –∂–∏–≤–æ—Ç–Ω–æ–µ ‚Äî {info.get('name', '')}\n\n"
        f"{info.get('description', '')}\n\n"
        f"–£–∑–Ω–∞—Ç—å –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –æ–ø–µ–∫–∏: {info.get('guardian_link', '')}"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
    if os.path.exists(img_path):
        with open(img_path, 'rb') as img:
            await update_or_query.message.reply_photo(photo=img, caption=caption)
    else:
        await update_or_query.message.reply_text(caption)

    # Inline-–∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    actions = [
        [InlineKeyboardButton("üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è", switch_inline_query="")],
        [InlineKeyboardButton("üîÑ –°–Ω–∞—á–∞–ª–∞", callback_data="restart")],
    ]
    await update_or_query.message.reply_text("–ß—Ç–æ –¥–∞–ª—å—à–µ?",
                                            reply_markup=InlineKeyboardMarkup(actions))

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç inline-–∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
     - contact: —Å–æ–æ–±—â–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏
     - restart: –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –∑–∞–Ω–æ–≤–æ
     - feedback: –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ —Ä–µ–∂–∏–º —Å–±–æ—Ä–∞ –æ—Ç–∑—ã–≤–∞
    """
    cq = update.callback_query
    await cq.answer()
    data = cq.data

    if data == 'contact':
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞–ø—Ä—è–º—É—é
        contact_text = (
            "–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–ø–µ–∫—É–Ω—Å—Ç–≤–∞ –∑–≤–æ–Ω–∏—Ç–µ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (962) 971-38-75 "
            "–∏–ª–∏ –ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É zoofriends@moscowzoo.ru"
        )
        await cq.message.reply_text(contact_text, reply_markup=get_main_kb())

    elif data == 'restart':
        await start_quiz(update, context)

    elif data == 'feedback':
        context.user_data['awaiting_feedback'] = True
        await cq.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤:")

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –∏–∑ MAIN_KEYBOARD –∏ —Å–±–æ—Ä –æ—Ç–∑—ã–≤–æ–≤:
     - ¬´–í–∏–∫—Ç–æ—Ä–∏–Ω–∞¬ª: –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤–∏–∫—Ç–æ—Ä–∏–Ω—É
     - ¬´–û—Ç–∑—ã–≤¬ª: –≤–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º feedback
     - ¬´–°–≤—è–∑—å¬ª: –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
     - ¬´–ü–æ–º–æ—â—å¬ª: –≤—ã–≤–æ–¥–∏—Ç —Å–ø—Ä–∞–≤–∫—É
     - –ï—Å–ª–∏ –≤ —Ä–µ–∂–∏–º–µ feedback ‚Äî –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç –∫–∞–∫ –æ—Ç–∑—ã–≤
     - –ò–Ω–∞—á–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –∏–ª–∏ /start
    """
    txt = update.message.text or ''

    if txt == 'üß© –í–∏–∫—Ç–æ—Ä–∏–Ω–∞':
        return await start_quiz(update, context)

    if txt == 'üìù –û—Ç–∑—ã–≤':
        context.user_data['awaiting_feedback'] = True
        return await update.message.reply_text(
            '–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∑—ã–≤:'
        )
    
    if txt == '‚úâÔ∏è –°–≤—è–∑—å':
        # –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ ¬´–°–≤—è–∑—å¬ª –≤—ã–≤–æ–¥–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        contact_text = (
            "–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–ø–µ–∫—É–Ω—Å—Ç–≤–∞ –∑–≤–æ–Ω–∏—Ç–µ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (962) 971-38-75 "
            "–∏–ª–∏ –ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É zoofriends@moscowzoo.ru"
        )
        return await update.message.reply_text(contact_text, reply_markup=get_main_kb())

    if txt == '‚ÑπÔ∏è –ü–æ–º–æ—â—å':
        help_text = (
            '/start ‚Äî –º–µ–Ω—é\n'
            'üß© –í–∏–∫—Ç–æ—Ä–∏–Ω–∞ ‚Äî –Ω–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É\n'
            'üìù –û—Ç–∑—ã–≤ ‚Äî –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤\n'
            '‚úâÔ∏è –°–≤—è–∑—å ‚Äî —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π'
        )
        return await update.message.reply_text(help_text, reply_markup=get_main_kb())

    # –ï—Å–ª–∏ –∂–¥—ë–º –æ—Ç–∑—ã–≤, –ø—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    if context.user_data.get('awaiting_feedback'):
        fb = update.message.text
        # –ú–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Ñ–∞–π–ª –∏–ª–∏ –ë–î (–Ω–æ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ)
        context.user_data['awaiting_feedback'] = False
        return await update.message.reply_text('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! üòä',
                                               reply_markup=get_main_kb())

    # –í–æ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö
    await update.message.reply_text('–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –∏–ª–∏ /start',
                                    reply_markup=get_main_kb())

